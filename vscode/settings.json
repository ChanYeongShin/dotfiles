{

    // ????
    "[python]": {
        "editor.formatOnType": true
    },
    "cmake.configureOnOpen": true,


    // Theme
    "workbench.colorTheme": "Visual Studio Dark - C++",


    // Autosave
    "files.autoSave": "afterDelay",


    // Unfocused panes are dimmed
    "accessibility.dimUnfocused.enabled": true,
    "accessibility.dimUnfocused.opacity": 0.8,


    // Editor settings
    "editor.inlineSuggest.enabled": true,
    "editor.cursorSurroundingLines": 10,
    "editor.cursorBlinking": "blink",
    "editor.rulers": [80],
    "editor.minimap.enabled": false,
    "editor.wordWrap": "off",


    // Cursorline
    "editor.renderLineHighlight": "all",
    "workbench.colorCustomizations": {
        "editor.lineHighlightBackground": "#ffffff10",
        // "editor.lineHighlightBorder": "#00000000",
    },


    // ctrl + [hjkl] to switch between editor groups including terminal
    "terminal.integrated.commandsToSkipShell": [
        "workbench.action.focusAboveGroup",
        "workbench.action.focusBelowGroup",
        "workbench.action.focusLeftGroup",
        "workbench.action.focusRightGroup",
        "workbench.action.focusActiveEditorGroup",
        "workbench.action.focusPanel"
    ],


    // Extension for make vscode transparent
    "glassit.alpha": 255,



    // ==================== VIM ======================
    "vim.easymotion": true,
    "vim.sneak": true,
    "vim.sneakUseIgnorecaseAndSmartcase": true,
    "vim.replaceWithRegister": false,
    "vim.camelCaseMotion.enable": true,
    "vim.hlsearch": true,
    "vim.leader": "<space>",

    // Highlighted yank
    "vim.highlightedyank.enable": true,
    "vim.highlightedyank.duration": 500,
    "vim.highlightedyank.color": "rgba(255, 255, 0, 1)",
    "vim.highlightedyank.textColor": "rgba(0, 0, 0, 1)",

    // Use ctrl keys
    "vim.handleKeys": {
        "<C-z>": false, // undo
        "<C-x>": false, // cut
        "<C-c>": false, // copy
        "<C-v>": false, // paste
        "<C-b>": false, // toggle primary sidebar

        "<C-h>": false, // left
        "<C-j>": false, // down
        "<C-k>": false, // up
        "<C-l>": false, // right

        "<C-q>": true, // quit (close window)
        "<C-e>": false, // explorer

        "<C-m>": false, // multiselect
        "<C-y>": false, // redo
        "<C-f>": false, // find
        "<C-a>": false, // select all
    },

    // jk dda-dak to exit insert mode
    "vim.insertModeKeyBindings": [
        {
            "before": ["j", "k"],
            "after": ["<Esc>"]
        }
    ],

    // Language Server Protocol
    // https://dev.to/ansonh/10-vs-code-vim-tricks-to-boost-your-productivity-1b0n#5-lsp-keybindings
    "vim.normalModeKeyBindings": [
        {
          "before": ["g", "p", "d"],
          "commands": ["editor.action.peekDefinition"]
        },
        {
          "before": ["g", "h"],
          "commands": ["editor.action.showDefinitionPreviewHover"]
        },
        {
          "before": ["g", "i"],
          "commands": ["editor.action.goToImplementation"]
        },
        {
          "before": ["g", "p", "i"],
          "commands": ["editor.action.peekImplementation"]
        },
        {
          "before": ["g", "q"],
          "commands": ["editor.action.quickFix"]
        },
        {
          "before": ["g", "r"],
          "commands": ["editor.action.referenceSearch.trigger"]
        },
        {
          "before": ["g", "t"],
          "commands": ["editor.action.goToTypeDefinition"]
        },
        {
          "before": ["g", "p", "t"],
          "commands": ["editor.action.peekTypeDefinition"]
        },
    ],

    "vim.operatorPendingModeKeyBindings": [
        {
            "before": ["L"],
            "after": ["$"]
        },
        {
            "before": ["H"],
            "after": ["^"]
        }
    ],

    "vim.normalModeKeyBindingsNonRecursive": [
        // HJKL
        {
            "before": ["H"],
            "after": ["^"],
        },
        {
            "before": ["L"],
            "after": ["$"],
        },
        // {
        //     "before": ["J"],
        //     "after": ["5", "j"],
        // },
        // {
        //     "before": ["k"],
        //     "after": ["5", "k"],
        // },

        // indent
        {
            "before": ["<"],
            "commands": [
                "editor.action.outdentLines"
            ],
        },
        {
            "before": [">"],
            "commands": [
                "editor.action.indentLines"
            ],
        },

        // Yank & Paste
        {
            "before": ["y"],
            "after": ["\"", "*", "y"],
        },
        {
            "before": ["Y"],
            "after": ["\"", "*", "y", "$"],
        },
        {
            "before": ["p"],
            "after": ["\"", "*", "p"],
        },
        {
            "before": ["P"],
            "after": ["\"", "*", "P"],
        },

    ],

    "vim.visualModeKeyBindingsNonRecursive": [
        // HJKL
        {
            "before": ["H"],
            "after": ["^"],
        },
        {
            "before": ["L"],
            "after": ["$"],
        },
        // {
        //     "before": ["J"],
        //     "after": ["5", "j"],
        // },
        // {
        //     "before": ["K"],
        //     "after": ["5", "k"],
        // },

        // Indent
        {
            "before": ["<"],
            "commands": [
                "editor.action.outdentLines"
            ],
        },
        {
            "before": [">"],
            "commands": [
                "editor.action.indentLines"
            ],
        },

        // Yank & Paste
        {
            "before": ["y"],
            "after": ["\"","*","y","g","v"],
        },
        {
            "before": ["Y"],
            "after": ["\"","*","y","g","v"],
        },
        {
            "before": ["p"],
            "after": ["\"","*","p","g","v","\"","*","y"],
        },
        {
            "before": ["P"],
            "after": ["\"","*","p","g","v","\"","*","y"],
        },
    ],
}