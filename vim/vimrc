syntax enable "make colorscheme work on mac
colorscheme jellybeans

"start cursor where last left
au BufReadPost *
\ if line("'\"") > 0 && line("'\"") <= line("$") |
\ exe "norm g`\"" |
\ endif

" https://nickjanetakis.com/blog/change-your-vim-cursor-from-a-block-to-line-in-normal-and-insert-mode
" Use a line cursor within insert mode and a block cursor everywhere else.
" Reference chart of values:
"   Ps = 0  -> blinking block.
"   Ps = 1  -> blinking block (default).
"   Ps = 2  -> steady block.
"   Ps = 3  -> blinking underline.
"   Ps = 4  -> steady underline.
"   Ps = 5  -> blinking bar (xterm).
"   Ps = 6  -> steady bar (xterm).
let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"

set number relativenumber  "line number on the left
set autoindent      "autoindent
set hlsearch        "highlight search with / or ?
set ignorecase      "ignore case for search
set incsearch       "show search result for input character
set showmatch       "highlight matching brackets
set mouse=a         "allow mouse
set ts=4            "tap size
set sw=4            "shift width for use with >, <, or =
set expandtab       "spaces instead of tabs; `:retab` to change taps to spaces
set sts=4           "make spaces feel like tabs (like deleting)
set colorcolumn=80  "show vertical line at column 80
set nowrap          "no wraparound trailing characters
set scrolloff=99999 "put cursor always in center
set list            "make whitespaces visible
set listchars=tab:>-,trail:~,extends:>,precedes:<
"set listchars=tab:»\ ,trail:·,extends:>,precedes:<
set nostartofline   "keep column position when c-u or c-d


"display cursorline
set cursorline
set cursorcolumn
"autocmd insertenter * set nocursorline
"autocmd insertleave * set cursorline
"autocmd insertenter * set nocursorcolumn
"autocmd insertleave * set cursorcolumn

"autosave
autocmd TextChanged,TextChangedI <buffer> silent write

"jk to escape insert mode
inoremap jk <esc>

"use system clipboard
nnoremap yy "*yy
vnoremap y "*y
vnoremap x "*x
nnoremap p "*p
vnoremap p "*p

"indent/unindent faster
vnoremap > >gv
vnoremap < <gv
nnoremap > >>
nnoremap < <<

"up/down faster
nnoremap H ^
nnoremap J 5j
nnoremap K 5k
nnoremap L $
vnoremap H ^
vnoremap J 5j
vnoremap K 5k
vnoremap L $

"split panes
nnoremap z<space>h :vs<cr>
nnoremap z<space>j :sp<cr><c-w>j
nnoremap z<space>k :sp<cr>
nnoremap z<space>l :vs<cr><c-w>l

"move panes
nnoremap zh <c-w>h
nnoremap zj <c-w>j
nnoremap zk <c-w>k
nnoremap zl <c-w>l

"close pane
nnoremap zd :q<cr>






filetype plugin on
set omnifunc=syntaxcomplete#Complete


